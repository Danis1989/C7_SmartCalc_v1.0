// IS EQUAL TESTS

#test test_s21_is_equal_1
  s21_decimal num1 = dec_def(10, 0, 0, 0, 0);
  s21_decimal num2 = dec_def(10, 0, 0, 0, 0);
  int answer = 1;
  int result = s21_is_equal(num1, num2);
  ck_assert_int_eq(result, answer);

#test test_s21_is_equal_2
  s21_decimal num1 = dec_def(5, 0, 0, 0, 0);
  s21_decimal num2 = dec_def(10, 0, 0, 0, 0);
  int answer = 0;
  int result = s21_is_equal(num1, num2);
  ck_assert_int_eq(result, answer);

#test test_s21_is_equal_3
  s21_decimal num1 = dec_def(10, 0, 0, 0, 1);
  s21_decimal num2 = dec_def(10, 0, 0, 0, 1);
  int answer = 1;
  int result = s21_is_equal(num1, num2);
  ck_assert_int_eq(result, answer);

#test test_s21_is_equal_4
  s21_decimal num1 = dec_def(100, 0, 0, 1, 0);
  s21_decimal num2 = dec_def(10, 0, 0, 0, 0);
  int answer = 1;
  int result = s21_is_equal(num1, num2);
  ck_assert_int_eq(result, answer);

#test test_s21_is_equal_5
  s21_decimal num1 = dec_def(100, 100, 100, 1, 1);
  s21_decimal num2 = dec_def(100, 100, 100, 1, 1);
  int answer = 1;
  int result = s21_is_equal(num1, num2);
  ck_assert_int_eq(result, answer);

#test test_s21_is_equal_6
  s21_decimal num1 = dec_def(100, 100, 100, 1, 1);
  s21_decimal num2 = dec_def(100, 100, 100, 1, 1);
  int answer = 1;
  int result = s21_is_equal(num1, num2);
  ck_assert_int_eq(result, answer);

#test test_s21_is_equal_7
  s21_decimal num1 = dec_def(100, 100, 100, 5, 1);
  s21_decimal num2 = dec_def(100, 100, 100, 1, 1);
  int answer = 0;
  int result = s21_is_equal(num1, num2);
  ck_assert_int_eq(result, answer);

#test test_s21_is_equal_8
  s21_decimal num1 = dec_def(0, 0, 0, 0, 1);
  s21_decimal num2 = dec_def(0, 0, 0, 0, 0);
  int answer = 1;
  int result = s21_is_equal(num1, num2);
  ck_assert_int_eq(result, answer);

#test test_s21_is_equal_9
  s21_decimal num1 = dec_def(0, 0, 0, 0, 1);
  s21_decimal num2 = dec_def(0, 0, 0, 12, 0);
  int answer = 1;
  int result = s21_is_equal(num1, num2);
  ck_assert_int_eq(result, answer);

#test test_s21_is_equal_10
  s21_decimal num1 = dec_def(0, 0, 0, 5, 1);
  s21_decimal num2 = dec_def(0, 0, 0, 12, 0);
  int answer = 1;
  int result = s21_is_equal(num1, num2);
  ck_assert_int_eq(result, answer);

#test test_s21_is_equal_11
  s21_decimal num1 = dec_def(0, 0, 0, 5, 0);
  s21_decimal num2 = dec_def(0, 0, 0, 0, 1);
  int answer = 1;
  int result = s21_is_equal(num1, num2);
  ck_assert_int_eq(result, answer);

#test test_s21_is_equal_12
  s21_decimal num1 = dec_def(0, 0, 0, 5, 0);
  s21_decimal num2 = dec_def(0, 0, 0, 1, 1);
  int answer = 1;
  int result = s21_is_equal(num1, num2);
  ck_assert_int_eq(result, answer);

#test test_s21_is_equal_13
  s21_decimal num1 = dec_def(0, 0, 0, 0, 0);
  s21_decimal num2 = dec_def(0, 0, 0, 3, 0);
  int answer = 1;
  int result = s21_is_equal(num1, num2);
  ck_assert_int_eq(result, answer);

#test test_s21_is_equal_14
  s21_decimal num1 = dec_def(0b01101001111101000100011011011000, 0b00101000001110101110110101011010, 0b1, 0, 0);
  s21_decimal num2 = dec_def(0b11100010001101001011101111000000, 0b00100110001011110010100100101101, 0b10010000101, 3, 0);
  int answer = 1;
  int result = s21_is_equal(num1, num2);
  ck_assert_int_eq(result, answer);

#test test_s21_is_equal_15
  s21_decimal num1 = dec_def(0b01101001111101000100011011011000, 0b00101000001110101110110101011010, 0b1, 0, 1);
  s21_decimal num2 = dec_def(0b11100010001101001011101111000000, 0b00100110001011110010100100101101, 0b10010000101, 3, 1);
  int answer = 1;
  int result = s21_is_equal(num1, num2);
  ck_assert_int_eq(result, answer);

#test test_s21_is_equal_16
  s21_decimal num1 = dec_def(0b01101001111101000100011011011000, 0b00101000001110101110110101011010, 0b1, 15, 1);
  s21_decimal num2 = dec_def(0b11100010001101001011101111000000, 0b00100110001011110010100100101101, 0b10010000101, 18, 1);
  int answer = 1;
  int result = s21_is_equal(num1, num2);
  ck_assert_int_eq(result, answer);

#test test_s21_is_equal_17
  s21_decimal num1 = dec_def(0b01101001111101000100011011011000, 0b00101000001110101110110101011010, 0b1, 15, 0);
  s21_decimal num2 = dec_def(0b11100010001101001011101111000000, 0b00100110001011110010100100101101, 0b10010000101, 18, 1);
  int answer = 0;
  int result = s21_is_equal(num1, num2);
  ck_assert_int_eq(result, answer);

#test test_s21_is_equal_18
  s21_decimal num1 = dec_def(0b01101001111101000100011011011000, 0b00101000001110101110110101011010, 0b1, 16, 1);
  s21_decimal num2 = dec_def(0b11100010001101001011101111000000, 0b00100110001011110010100100101101, 0b10010000101, 18, 1);
  int answer = 0;
  int result = s21_is_equal(num1, num2);
  ck_assert_int_eq(result, answer);

// IS GREATER TESTS

#test test_s21_is_greater_1
  s21_decimal num1 = dec_def(1009, 0, 0, 0, 0);
  s21_decimal num2 = dec_def(10, 0, 0, 0, 0);
  int answer = 1;
  int result = s21_is_greater(num1, num2);
  ck_assert_int_eq(result, answer);

#test test_s21_is_greater_2
  s21_decimal num1 = dec_def(0b01101001111101000100011011011000, 0b00101000001110101110110101011010, 0b1, 0, 1);
  s21_decimal num2 = dec_def(0b11100010001101001011101111000000, 0b00100110001011110010100100101101, 0b10010000101, 3, 1);
  int answer = 0;
  int result = s21_is_greater(num1, num2);
  ck_assert_int_eq(result, answer);

#test test_s21_is_greater_3
  s21_decimal num1 = dec_def(1009, 11, 1, 0, 1);
  s21_decimal num2 = dec_def(1009, 11, 0, 0, 0);
  int answer = 0;
  int result = s21_is_greater(num1, num2);
  ck_assert_int_eq(result, answer);

#test test_s21_is_greater_4
  s21_decimal num1 = dec_def(1009, 11, 1, 0, 0);
  s21_decimal num2 = dec_def(1009, 11, 1000, 0, 1);
  int answer = 1;
  int result = s21_is_greater(num1, num2);
  ck_assert_int_eq(result, answer);

#test test_s21_is_greater_5
  s21_decimal num1 = dec_def(1009, 11, 1, 0, 1);
  s21_decimal num2 = dec_def(1009, 11, 0, 0, 1);
  int answer = 0;
  int result = s21_is_greater(num1, num2);
  ck_assert_int_eq(result, answer);

#test test_s21_is_greater_6
  s21_decimal num1 = dec_def(1009, 11, 1, 0, 0);
  s21_decimal num2 = dec_def(1009, 11, 0, 0, 0);
  int answer = 1;
  int result = s21_is_greater(num1, num2);
  ck_assert_int_eq(result, answer);

#test test_s21_is_greater_7
  s21_decimal num1 = dec_def(0b01101001111101000100011011011000, 0b00101000001110101110110101011010, 0b1, 1, 0);
  s21_decimal num2 = dec_def(0b11100010001101001011101111000000, 0b00100110001011110010100100101101, 0b10010000101, 3, 0);
  int answer = 0;
  int result = s21_is_greater(num1, num2);
  ck_assert_int_eq(result, answer);

#test test_s21_is_greater_8
  s21_decimal num1 = dec_def(0b01101001111101000100011011011000, 0b00101000001110101110110101011010, 0b1, 1, 0);
  s21_decimal num2 = dec_def(0b11100010001101001011101111000000, 0b00100110001011110010100100101101, 0b10010000101, 4, 0);
  int answer = 0;
  int result = s21_is_greater(num1, num2);
  ck_assert_int_eq(result, answer);

#test test_s21_is_greater_9
  s21_decimal num1 = dec_def(0b01101001111101000100011011011000, 0b00101000001110101110110101011010, 0b1, 1, 0);
  s21_decimal num2 = dec_def(0b11100010001101001011101111000000, 0b00100110001011110010100100101101, 0b10010000101, 5, 0);
  int answer = 1;
  int result = s21_is_greater(num1, num2);
  ck_assert_int_eq(result, answer);

// IS GREATER OR EQUAL TESTS

#test test_s21_is_greater_or_equal_1
  s21_decimal num1 = dec_def(10, 0, 0, 0, 0);
  s21_decimal num2 = dec_def(10, 0, 0, 0, 0);
  int answer = 1;
  int result = s21_is_greater_or_equal(num1, num2);
  ck_assert_int_eq(result, answer);

#test test_s21_is_greater_or_equal_2
  s21_decimal num1 = dec_def(0b01101001111101000100011011011000, 0b00101000001110101110110101011010, 0b1, 1, 0);
  s21_decimal num2 = dec_def(0b11100010001101001011101111000000, 0b00100110001011110010100100101101, 0b10010000101, 5, 0);
  int answer = 1;
  int result = s21_is_greater_or_equal(num1, num2);
  ck_assert_int_eq(result, answer);

#test test_s21_is_greater_or_equal_3
  s21_decimal num1 = dec_def(0, 0, 0, 28, 0);
  s21_decimal num2 = dec_def(123, 125, 1234142, 1, 1);
  int answer = 1;
  int result = s21_is_greater_or_equal(num1, num2);
  ck_assert_int_eq(result, answer);

#test test_s21_is_greater_or_equal_4
  s21_decimal num1 = dec_def(0, 0, 0, 28, 0);
  s21_decimal num2 = dec_def(0, 0, 0, 1, 1);
  int answer = 1;
  int result = s21_is_greater_or_equal(num1, num2);
  ck_assert_int_eq(result, answer);

// IS LESS TESTS

#test test_s21_is_less_1
  s21_decimal num1 = dec_def(0, 0, 0, 28, 0);
  s21_decimal num2 = dec_def(0, 0, 0, 1, 1);
  int answer = 0;
  int result = s21_is_less(num1, num2);
  ck_assert_int_eq(result, answer);

#test test_s21_is_less_2
  s21_decimal num1 = dec_def(0b11101010110110010000101110010011, 0b00101110010001011110101001111000, 0b10101110010010101, 0, 0);
  s21_decimal num2 = dec_def(0b10111100110010001000010101101100, 0b00010011010011111001011100111011, 0b100010000010101001000110, 2, 1);
  int answer = 0;
  int result = s21_is_less(num1, num2);
  ck_assert_int_eq(result, answer);

#test test_s21_is_less_3
  s21_decimal num1 = dec_def(0b11101010110110010000101110010011, 0b00101110010001011110101001111000, 0b10101110010010101, 1, 0);
  s21_decimal num2 = dec_def(0b10111100110010001000010101101100, 0b00010011010011111001011100111011, 0b100010000010101001000110, 2, 1);
  int answer = 0;
  int result = s21_is_less(num1, num2);
  ck_assert_int_eq(result, answer);

#test test_s21_is_less_4
  s21_decimal num1 = dec_def(0, 0, 1, 28, 0);
  s21_decimal num2 = dec_def(0, 0, 0, 1, 1);
  int answer = 0;
  int result = s21_is_less(num1, num2);
  ck_assert_int_eq(result, answer);

// IS LESS OR EQUAL TESTS

#test s21_is_less_or_equal_1
  s21_decimal num1 = dec_def(0b11101010110110010000101110010011, 0b00101110010001011110101001111000, 0b10101110010010101, 1, 0);
  s21_decimal num2 = dec_def(0b10111100110010001000010101101100, 0b00010011010011111001011100111011, 0b100010000010101001000110, 2, 0);
  int answer = 1;
  int result = s21_is_less_or_equal(num1, num2);
  ck_assert_int_eq(result, answer);

#test s21_is_less_or_equal_2
  s21_decimal num1 = dec_def(0, 0, 0, 1, 1);
  s21_decimal num2 = dec_def(0xffffffff, 0xffffffff, 0xffffffff, 2, 1);
  int answer = 0;
  int result = s21_is_less_or_equal(num1, num2);
  ck_assert_int_eq(result, answer);

// IS NOT EQUAL TESTS

#test s21_is_not_equal_1
  s21_decimal num1 = dec_def(0, 0, 0, 1, 1);
  s21_decimal num2 = dec_def(0xffffffff, 0xffffffff, 0xffffffff, 2, 1);
  int answer = 1;
  int result = s21_is_not_equal(num1, num2);
  ck_assert_int_eq(result, answer);

#test s21_is_not_equal_2
  s21_decimal num1 = dec_def(0, 0, 0, 1, 1);
  s21_decimal num2 = dec_def(0, 0, 0, 2, 1);
  int answer = 0;
  int result = s21_is_not_equal(num1, num2);
  ck_assert_int_eq(result, answer);

#test s21_is_not_equal_3
  s21_decimal num1 = dec_def(15, 11, 0, 1, 1);
  s21_decimal num2 = dec_def(0, 0, 1, 2, 1);
  int answer = 1;
  int result = s21_is_not_equal(num1, num2);
  ck_assert_int_eq(result, answer);